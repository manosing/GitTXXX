name: ISPW sync workflow
# Controls when the action will run. 
on: [push]
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
  #  branches: [ branch ]
  #pull_request:
  #  branches: [ branch ]

  # Allows you to run this workflow manually from the Actions tab
  #workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, singhrunner]
    # if need this 
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      Win_Topaz_Location: 'C:\TWB-20.09.01\CLI'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
     
      # sync step 2
      - name: Sync step
        uses: bmc-compuware/ispw-sync-local@1.0.0
        id: sync-local
        with:
          host: 'cwcc.compuware.com'
          port: 16196
          uid: 'PFHMKS0'
          pass: ${{ secrets.TSO_TOKEN }}
          runtimeConfiguration: 'ISPW'
          stream: 'FTSDEMO'
          application: 'MKS1'
          checkoutLevel: 'QA1'
          gitUid: 'manosing'
          gitPass: ${{ secrets.GIT_USER1_PWD }}
          token: ${{ secrets.GH_TOKEN }}
          winTopazPath: ${{ env.Win_Topaz_Location }}
          showEnv: false
      # Generate step
      - name: Get automatic build parameters
        run: echo "automaticBuildJson=${{ steps.sync.outputs.automaticBuildJson }}"
      - name: Get changed programs
        run: echo "changedProgramsJson=${{ steps.sync.outputs.changedProgramsJson }}"
      - name: Generate
        uses: bmc-compuware/ispw-generate@main
        id: generate
        with:
          ces_url: 'http://cwcc:2020'
          ces_token: ${{ secrets.CES_TOKEN }}
          srid: 'cwcc-2020'
          runtime_configuration: 'ISPW'
          generate_automatically: ${{ steps.sync-local.outputs.automaticBuildJson }}
